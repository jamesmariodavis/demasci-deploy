# syntax=docker/dockerfile:1.3

ARG BASE_BUILDER_IMAGE_NAME_ARG
FROM ${BASE_BUILDER_IMAGE_NAME_ARG} as base-builder

FROM python:3.8-alpine
# copy coin-or binaries and add to path
COPY --from=base-builder /coin-or /coin-or
ENV PATH="${PATH}:/coin-or/bin"\
    PATH="${PATH}:/coin-or/lib" \
    LD_LIBRARY_PATH=/coin-or/lib

# copy python and libraries
COPY --from=base-builder /usr/local/bin /usr/local/bin
COPY --from=base-builder /usr/local/lib/python3.8 /usr/local/lib/python3.8

# install minimal dependencies for convenience
# blas, lapack referenced by scientific computing (numpy)
RUN apk update &&\
    apk add \
    make \
    curl \
    blas \
    lapack \
    bash &&\
    pip install --upgrade pip

# allow statements and log messages to immediately appear in the Knative logs in server
ENV PYTHONUNBUFFERED=True

# capture flask app args passed from build script
# see scripts.sh for passed values
ARG FLASK_APP_MODULE_LOCATION_ARG
ARG FLASK_APP_NAME_IN_CODE_ARG
ARG FLASK_APP_WORKERS_ARG
ARG FLASK_APP_THREADS_ARG
ARG FLASK_APP_TIMEOUT_ARG

# inject passed arguments as permanent environment variables
ENV FLASK_APP_MODULE_LOCATION=${FLASK_APP_MODULE_LOCATION_ARG}\
    FLASK_APP_NAME_IN_CODE=${FLASK_APP_NAME_IN_CODE_ARG} \
    FLASK_APP_WORKERS=${FLASK_APP_WORKERS_ARG} \
    FLASK_APP_THREADS=${FLASK_APP_THREADS_ARG} \
    FLASK_APP_TIMEOUT=${FLASK_APP_TIMEOUT_ARG}
